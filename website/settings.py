"""
Django settings for website project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

config = {};
configFilePath = os.path.join(BASE_DIR, "config.json");
if os.path.exists(configFilePath):
    with open(configFilePath, "r") as f:
        config = json.loads(f.read());

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=q)!)fo0*0)ykad)lxhl3aw3qyv7!chv!#k(h)xsigp2(f_5w5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = config.get("ALLOWED_HOSTS", []);


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "DBModel",
    "ckeditor",
    "ckeditor_uploader",
    "channels",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'website.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR+"/template"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'website.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

mysqlCfg = config.get("mysql", {});

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': mysqlCfg.get('NAME', 'pytoolsip'),
        'USER': mysqlCfg.get('USER', 'root'),
        'PASSWORD': mysqlCfg.get('PASSWORD', 'pwdis123456'),
        'HOST': mysqlCfg.get('HOST', 'localhost'),
        'PORT': mysqlCfg.get('PORT', '3306'),
        'OPTIONS':{
            'init_command' : 'SET foreign_key_checks = 0;',
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Project name
PROJECT_NAME = 'pytoolsip'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = f'/{PROJECT_NAME}/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'assets/static'),
)

# Media files (Upload Files)
MEDIA_URL = f'/{PROJECT_NAME}/media/'

MEDIA_ROOT = (
    os.path.join(BASE_DIR, 'assets/media')
)

# Redis Cache
redisCfg = config.get("redis", {});

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": redisCfg.get("LOCATION", "redis://localhost:6379"),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    },
}

# Email
emailCfg = config.get("email", {});

EMAIL_HOST = emailCfg.get("HOST", "smtp.163.com")
EMAIL_PORT = emailCfg.get("PORT", 994)
EMAIL_HOST_USER = emailCfg.get("USER", "jdreamheart@163.com")
EMAIL_HOST_PASSWORD = emailCfg.get("PASSWORD", "xxxxx")
EMAIL_USE_SSL = True

# ckeditor
CKEDITOR_RESTRICT_BY_USER = True
CKEDITOR_UPLOAD_PATH = "upload"
CKEDITOR_IMAGE_BACKEND = "pillow"
CKEDITOR_CONFIGS = {
    "default" : {
        "skin": "moono",
        "language" : "zh-cn",
        "toolbar" : "Custom",
        "toolbar_Custom" : [
            ["Preview"],
            ["Undo", "Redo"],
            ["TextColor", "BGColor"],
            ["Bold", "Italic", "Underline", "Strike", "-", "Subscript", "Superscript", "-", "RemoveFormat"],
            ["Image", "Link", "Unlink", "Table", "SpecialChar", "-", "CodeSnippet"],
            ["JustifyLeft", "JustifyCenter", "JustifyRight", "JustifyBlock"],
            ["NumberedList", "BulletedList", "-", "Outdent", "Indent", "Blockquote"],
            ["Styles", "Format", "Font", "FontSize"],
        ],
        "extraPlugins": ",".join(["codesnippet"]),
        "tabSpaces": 4,
        "width" : "100%",
    },
}

# websocket
ASGI_APPLICATION = "website.routing.application"

# home url
HOME_URL = config.get("HOME_URL", "http://localhost:8008")
RESOURCE_URL = config.get("RESOURCE_URL", "http://jimdreamheart.club/resource")